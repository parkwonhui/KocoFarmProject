<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.kocofarm.mapper.module.ApprovalMapper">

	<!-- ****************************** 조회 ****************************** -->
	<!-- 전체 기안서 불러오기  -->
	<select id = "getDraftList" resultType = "org.kocofarm.domain.approval.ApprDraftVO">
		select 	draft_id as draftId,
				draft_name as draftName,
				draft_dt as draftDt,
				draft_title as draftTitle,
				emp_id as empId,
				draft_year as draftYear,
				form_id as formId,
				approve_state as approveState
		from draft
	</select>
	
	<!-- 전체 양식 불러오기  -->
	<select id = "getFormList" resultType = "org.kocofarm.domain.approval.ApprFormVO">
		select 	form_id as formId,
				sort_id as sortId,
				mode_id as modeId,
				sort_name as sortName,
				mode_name as modeName
		from form
	</select>
	
	<!-- 최근 기안서 번호 불러오기 -->
	<select id = "getDraftNo" resultType = "Integer">
		select draft_id as draftId 
		from draft
		where ROWNUM = 1
		order by draft_id DESC
	</select>

 	<!-- 결재자(EMP) 리스트 불러오기  -->
 	<select id = "getApprEmpInfoList" resultType = "org.kocofarm.domain.approval.ApprEmpPerDraftVO">
		select 	d.dept_nm as deptNm,
				e.kor_nm as korNm,
		 		p.position_nm as positionNm,
		 		e.emp_id as empId,
		 		e.emp_sign as empSign,
		 		a.draft_sign as draftSign
		from emp e, appr_emp a, departments d, position p
		where	e.emp_id = a.emp_id and
      			e.position_id = p.position_id and
      			e.dept_id = d.dept_id and 
 		 		a.draft_id = #{draftId}
 	</select>
	
	<!-- 기안서 별 결재자(APPR_EMP) 리스트 불러오기  -->
	<select id = "getApprEmpList" resultType = "org.kocofarm.domain.approval.ApprEmpDraftDetailVO">
		select 	apprline_id as apprlineId,
				appr_dt as apprDt,
				emp_id as empId,
				appr_option as apprOption,
				draft_id as draftId,
				draft_sign as draftSign			
		from 	appr_emp
		where	draft_id = #{draftId}
 	</select>
	
	
	
	<!-- 로그인 회원이 결재할 기안서 개수 가져오기  -->
	<select id = "getNumberOfDraft" resultType = "int" >
		select count(*)
  		from appr_emp
  		where emp_id = #{empId}
  		and appr_option = '미확인'
	</select>
	
	<!-- 등록된 기안서의 결재자 정보  -->
	<select id = "getApprEmp" resultType ="org.kocofarm.domain.approval.ApprEmpDraftDetailVO">
		select 	apprline_id as apprlineId,
				appr_dt as apprDt,
				appr_option as apprOption,
				draft_id as draftId,
				draft_sign as draftSign,
				emp_id as empId
		from 	appr_emp
  		where 	draft_id = #{draftId} and 
  				emp_id = #{empId}
	</select>

	
	<!-- 사원별 기안서 정보  불러오기 -->
	<select id = "getEmpDraftList" resultType ="org.kocofarm.domain.approval.ApprEmpDraftVO">
		select 	d.draft_id as draftId,
				d.draft_name as draftName,
				f.mode_name as modeName,
				d.draft_dt as draftDt,
				e.emp_id as empId,
				e.kor_nm as korNm,
				a.appr_option as apprOption
    	from 	appr_emp a, 
    			draft d,
    			form f, 
    			emp e
    	where 	a.draft_id = d.draft_id and
          		d.form_id = f.form_id and
          		a.emp_id = e.emp_id and
          		a.emp_id = #{empId}
	</select>
	
	<!-- ****************************** 기안서 불러오기 ******************************  -->
	<!-- 특정 기안서 불러오기 -->
	<select id="getDraft" resultType = "org.kocofarm.domain.approval.ApprDraftVO">
		select 	draft_id as draftId,
				draft_name as draftName,
				draft_dt as draftDt,
				draft_title as draftTitle,
				emp_id as empId,
				draft_year as draftYear,
				form_id as formId,
				approve_state as approveState
		from draft
		where draft_id = #{draftId}
	</select>
	
	<!-- 지출결의서 정보 불러오기 -->
	<select id = "getExpence" resultType = "org.kocofarm.domain.approval.ApprExpenceVO">
		select 	expence_id as expenceId,
				draft_id as draftId,
				form_id as formId,
				expence_dt as expenceDt,
				expence_type as expenceType,
				sum_price as sumPrice
		from expence_form
		where draft_id = #{draftId}
	</select>
	
	<!-- 지출 결의서 내역 불러오기 -->
	<select id="getExpenceCont" resultType = "org.kocofarm.domain.approval.ApprExpenceContVO">
		select	expence_id as expenceId,
				cont_seq as contSeq,
				customer_name as customerName,
				expence_price as expencePrice,
				commission_option as commissionOption,
				commission_price as commissionPrice
		from expence_cont
		where expence_id = #{expenceId}
	</select>
	
	<!-- 휴가 신청서 정보 불러오기 -->
	<select id = "getVacation" resultType = "org.kocofarm.domain.approval.ApprVacationVO">
		select 	vacation_id as vacationId,
				draft_id as draftId,
				form_id as formId,
				vacation_start_dt as vacationStartDt,
				vacation_end_dt as vacationEndDt,
				vacation_type as vacationType,
				vacation_days as vacationDays,
				vacation_reason as vacationReason,
				replacement_id as replacementId
		from vacation_form
		where draft_id = #{draftId}
	</select>
	
	
	<!-- ****************************** 페이징 처리 ****************************** -->
	<!-- index 정렬후 페이징 목록 가져오기 -->
	<select id="getListWithPaging" resultType = "org.kocofarm.domain.approval.ApprDraftVO">
		<![CDATA[
		select 	draft_id as draftId,
				draft_name as draftName,
				draft_dt as draftDt,
				draft_title as draftTitle,
				emp_id as empId,
				draft_year as draftYear,
				form_id as formId,
				approve_state as approveState
		from
			(	select /*+INDEX_DESC (draft P_5)+*/ 
						rownum rn,
						draft_id,
						draft_name,
						draft_dt,
						draft_title,
						emp_id,
						draft_year,
						form_id,
						approve_state
				from draft
				where rownum <= #{pageNum} * #{amount}
			)
		where rn > (#{pageNum} -1 ) * #{amount}
	]]>
	</select>
	
	<!-- 전체 기안서 개수 가져오기 -->
	<select id = "getTotalCount" resultType = "int">
		select count(*) from draft
	</select>
	
	<!-- ****************************** 입력 ****************************** -->
	
	<!-- 기본 기안서 정보 입력하기  -->
	<insert id = "setDraft" parameterType = "org.kocofarm.domain.approval.ApprDraftVO">
		insert into draft <!-- (draft_id,draft_name,draft_Dt,draft_title,emp_id,draft_year,form_id,approve_state) -->
		values (seq_draft.nextval,'기안서 이름',SYSDATE,#{draftTitle},#{empId},#{draftYear},#{formId},'기안중')
	</insert>

	<!-- 휴가 신청서 입력 -->
	<insert id="setVacation" parameterType="org.kocofarm.domain.approval.ApprVacationVO">
		insert into vacation_form <!-- (vacation_id,draft_id,form_id,vacation_start_dt,vacation_end_dt,vacation_type,vacation_days,vacation_reason,replacement_id) -->
		values(seq_vacation.nextval,#{draftId},#{formId},#{vacationStartDt},#{vacationEndDt},#{vacationType},#{vacationDays},#{vacationReason},#{replacementId})
	</insert>

	<!-- 지출 결의서 입력 -->
	<insert id="setExpence" parameterType="org.kocofarm.domain.approval.ApprExpenceVO">
		insert into expence_form<!--  (expence_id,draft_id,form_id,expence_dt,expence_type,sum_price) -->
		values(seq_expence.nextval,#{draftId},#{formId},#{expenceDt},#{expenceType},#{sumPrice})
	</insert>

	<!-- 지출 내역 입력 -->
	<insert id="setExpenceCont" parameterType="org.kocofarm.domain.approval.ApprExpenceContVO">
		insert into expence_cont
		values(${expenceId},#{contSeq},#{customerName},#{expencePrice},#{commissionOption},#{commissionPrice})
	</insert>

	<!-- 결재자 입력 -->
	<insert id = "setApprEmp" parameterType="org.kocofarm.domain.approval.ApprEmpVO">
		insert into appr_emp (draft_id,emp_id,appr_option)
		values(#{draftId},#{empId},'미확인')
	</insert>
	<!-- ****************************** 수정 ****************************** -->

	<!-- EMP에 SIGN 추가 -->
	<update id = "setUpSign" parameterType="String">
		update emp 
		set emp_sign = #{empSign}
		where emp_id = #{empId}
	</update>
	<!-- 기본 기안서 정보 수정 -->
	<update id="setUpDraft" parameterType="org.kocofarm.domain.approval.ApprDraftVO">
		update DRAFT 
		set approve_state = #{approveState},
			draft_title = #{draftTitle},
			draft_dt = SYSDATE,
			draft_year = #{draftYear}
		where draft_id = #{draftId}
	</update>

	<!-- 휴가 신청서 정보 수정 -->
	<update id="setUpVacation" parameterType="org.kocofarm.domain.approval.ApprVacationVO">
		update 	vacation_form
		set		vacation_type = #{vacationType},
		   		vacation_start_dt = #{vacationStartDt},
		   		vacation_end_dt = #{vacationEndDt},
				vacation_days = #{vacationDays},
				vacation_reason = #{vacationReason},
				replacement_id = #{replacementId}
		where 	draft_id = #{draftId}
	</update>

	<!-- 지출 결의서 정보 수정 -->
	<update id="setUpExpence" parameterType="org.kocofarm.domain.approval.ApprExpenceVO">
		update 	expence_form 
		set 	expence_dt = SYSDATE , 
				expence_type = #{expenceType},
				sum_price = #{sumPrice}
		where 	expence_id = #{expenceId}
	</update>
	
	<!-- 지출 결의서 내역 수정 -->
	<update id="setUpExpenceCont" parameterType="org.kocofarm.domain.approval.ApprExpenceContVO">
		update 	expence_cont 
		set		customer_name = #{customerName},
				expence_price = #{expencePrice},
				commission_option = #{commissionOption},
				commission_price = #{commissionPrice}
		where 	expence_id = #{expenceId}  
	</update>
	
	<!-- 기안서 상태 수정(기안중/결재중/반려/결재완료 -->
	<update id = "setUpApprState" parameterType = "org.kocofarm.domain.approval.ApprDraftVO">
		update 	draft
		set 	approve_state = #{approveState}
		where 	draft_id = #{draftId}
	</update>
	
	<!-- 결재자 결재 여부 수정(결재/반려/미확인) -->
	<update id = "setUpApprOption" parameterType = "org.kocofarm.domain.approval.ApprEmpDraftDetailVO">
		update 	appr_emp
		set 	appr_option = #{apprOption},
				draft_Sign = #{draftSign}
		where 	draft_id = #{draftId} and
				emp_id = #{empId}
	</update>
	
	<!-- ****************************** 삭제 ****************************** -->
	
	<!-- 기존 결재자 정보 삭제(수정 전단계) -->
	<delete id ="delApprEmp">
		delete
		from appr_emp
		where draft_id = #{draftId}
	</delete>
	
	<!-- 기본 기안서 정보 삭제  -->
	<delete id = "delDraft" >
		delete 
		from draft 
		where draft_id = #{draftId}
	</delete>

	<!-- 휴가신청서 정보 삭제 -->
	<delete id = "delVacation">
		delete 
		from vacation_form
		where draft_id = #{draftId}
	</delete>
	
	<!-- 지출 결의서 정보 삭제 -->
	<delete id = "delExpence" >
		delete 
		from Expence_form 
		where draft_id = #{draftId}
	</delete>

	<!-- 지출 결의서 정보 삭제 -->
	<delete id = "delExpenceCont" >
		delete 
		from Expence_Cont 
		where expence_id = #{expenceId}
	</delete>

	
	<!-- ****************************** 댓글 ****************************** -->
	<!--  등록 -->
	<insert id="setComment" parameterType="org.kocofarm.domain.approval.ApprCommentVO">
	insert into DRAFT_COMMENT 
	values (seq_comment.nextval, #{draftId}, #{empId}, #{commentContents},SYSDATE <!-- #{commentDt} -->)
	</insert>
	
	<!--  조회 -->
	<select id="getCommentList" resultType="org.kocofarm.domain.approval.ApprCommentVO">
		select * from DRAFT_COMMENT where draft_id = #{draftId}
	</select>
	
	<!-- 삭제 -->
	<delete id="delComment">
	delete from DRAFT_COMMENT where comment_id = #{commentId}
	</delete>
	
	<!-- 수정 -->
	<update id="setUpComm" >
		update DRAFT_COMMENT
		set
		comment_contents = #{commentContents},
		comment_dt = SYSDATE
		where comment_id = #{commentId}	
	</update>
	
	<!-- 검색기능 -->
	<select id="selectDraft">
		select draft_id as draftId,
				draft_name as draftName,
				draft_dt as draftDt,
				draft_title as draftTitle,
				emp_id as empId,
				draft_year as draftYear,
				form_id as formId
				from ( 
				select )
	</select>
</mapper>